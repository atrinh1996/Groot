; ModuleID = 'gROOT'
source_filename = "gROOT"

%tree_struct = type { i32, %tree_struct*, %tree_struct* }

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@boolT = private unnamed_addr constant [3 x i8] c"#t\00", align 1
@boolF = private unnamed_addr constant [3 x i8] c"#f\00", align 1
@_retx1_1.1 = global i32 (i32)* null
@_x_2 = global i32 0
@_x_1 = global i32 0

declare i32 @printf(i8*, ...)

declare i32 @puts(i8*)

define i32 @main(%tree_struct %0) {
entry:
  store i32 1, i32* @_x_1, align 4
  %_x_1 = load i32, i32* @_x_1, align 4
  %printi = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %_x_1)
  store i32 (i32)* @_retx1_1, i32 (i32)** @_retx1_1.1, align 8
  %_x_11 = load i32, i32* @_x_1, align 4
  %_retx1_1 = load i32 (i32)*, i32 (i32)** @_retx1_1.1, align 8
  %fun_name = call i32 %_retx1_1(i32 %_x_11)
  %printi2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %fun_name)
  store i32 42, i32* @_x_2, align 4
  %_x_2 = load i32, i32* @_x_2, align 4
  %printi3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %_x_2)
  %_x_14 = load i32, i32* @_x_1, align 4
  %_retx1_15 = load i32 (i32)*, i32 (i32)** @_retx1_1.1, align 8
  %fun_name6 = call i32 %_retx1_15(i32 %_x_14)
  %printi7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %fun_name6)
  ret i32 0
}

define i32 @_retx1_1(i32 %_x_1) {
entry:
  %_x_11 = alloca i32, align 4
  store i32 %_x_1, i32* %_x_11, align 4
  %_x_12 = load i32, i32* %_x_11, align 4
  ret i32 %_x_12
}
