; ModuleID = 'gROOT'
source_filename = "gROOT"

%tree_struct = type { i32, %tree_struct*, %tree_struct* }

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@boolT = private unnamed_addr constant [3 x i8] c"#t\00", align 1
@boolF = private unnamed_addr constant [3 x i8] c"#f\00", align 1
@_square_1.1 = global i32 (i32, i32)* null

declare i32 @printf(i8*, ...)

declare i32 @puts(i8*)

define i32 @main(%tree_struct %0) {
entry:
  store i32 (i32, i32)* @_square_1, i32 (i32, i32)** @_square_1.1, align 8
  ret i32 0
}

define i32 @_square_1(i32 %x, i32 %"*") {
entry:
  %x1 = alloca i32, align 4
  store i32 %x, i32* %x1, align 4
  %"*2" = alloca i32, align 4
  store i32 %"*", i32* %"*2", align 4
  %x3 = load i32, i32* %x1, align 4
  %x4 = load i32, i32* %x1, align 4
  %"*5" = mul i32 %x3, %x4
  ret i32 %"*5"
}
