; ModuleID = 'gROOT'
source_filename = "gROOT"

%anon0_struct = type { i32 (i32, i32)* }
%anon4_struct = type { i32 (i32, i32)*, i32 }
%anon3_struct = type { %anon4_struct* (i32, i32)*, i32 }
%anon2_struct = type { i32 (i32, %anon0_struct*)*, i32, %anon0_struct* }
%anon1_struct = type { i32 (i32, %anon0_struct*)*, i32, %anon0_struct* }

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@boolT = private unnamed_addr constant [3 x i8] c"#t\00", align 1
@boolF = private unnamed_addr constant [3 x i8] c"#f\00", align 1
@_anon0_1 = global i32 (i32, i32)* null
@_anon1_1 = global i32 (i32, %anon0_struct*)* null
@_anon2_1 = global i32 (i32, %anon0_struct*)* null
@_anon3_1 = global %anon4_struct* (i32, i32)* null
@_anon4_1 = global i32 (i32, i32)* null
@_retn_1 = global %anon0_struct* null
@_retx_3 = global %anon3_struct* null
@_retx_2 = global %anon2_struct* null
@_retx_1 = global %anon1_struct* null
@_x_3 = global i32 0
@_x_2 = global i32 0
@_x_1 = global i32 0

declare i32 @printf(i8*, ...)

declare i32 @puts(i8*)

define i32 @main() {
entry:
  store i32 1996, i32* @_x_1
  %gstruct = alloca %anon0_struct
  %funcField = getelementptr inbounds %anon0_struct, %anon0_struct* %gstruct, i32 0, i32 0
  store i32 (i32, i32)* @anon0, i32 (i32, i32)** %funcField
  store %anon0_struct* %gstruct, %anon0_struct** @_retn_1
  %gstruct1 = alloca %anon1_struct
  %funcField2 = getelementptr inbounds %anon1_struct, %anon1_struct* %gstruct1, i32 0, i32 0
  store i32 (i32, %anon0_struct*)* @anon1, i32 (i32, %anon0_struct*)** %funcField2
  %_x_1 = load i32, i32* @_x_1
  %_retn_1 = load %anon0_struct*, %anon0_struct** @_retn_1
  %freeField = getelementptr inbounds %anon1_struct, %anon1_struct* %gstruct1, i32 0, i32 1
  %freeField3 = getelementptr inbounds %anon1_struct, %anon1_struct* %gstruct1, i32 0, i32 2
  store i32 %_x_1, i32* %freeField
  store %anon0_struct* %_retn_1, %anon0_struct** %freeField3
  store %anon1_struct* %gstruct1, %anon1_struct** @_retx_1
  %_retx_1 = load %anon1_struct*, %anon1_struct** @_retx_1
  %freePtr = getelementptr inbounds %anon1_struct, %anon1_struct* %_retx_1, i32 0, i32 1
  %freeVal = load i32, i32* %freePtr
  %freePtr4 = getelementptr inbounds %anon1_struct, %anon1_struct* %_retx_1, i32 0, i32 2
  %freeVal5 = load %anon0_struct*, %anon0_struct** %freePtr4
  %function_access = getelementptr inbounds %anon1_struct, %anon1_struct* %_retx_1, i32 0, i32 0
  %function_call = load i32 (i32, %anon0_struct*)*, i32 (i32, %anon0_struct*)** %function_access
  %function_result = call i32 %function_call(i32 %freeVal, %anon0_struct* %freeVal5)
  %printi = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %function_result)
  store i32 2004, i32* @_x_2
  %_retx_16 = load %anon1_struct*, %anon1_struct** @_retx_1
  %freePtr7 = getelementptr inbounds %anon1_struct, %anon1_struct* %_retx_16, i32 0, i32 1
  %freeVal8 = load i32, i32* %freePtr7
  %freePtr9 = getelementptr inbounds %anon1_struct, %anon1_struct* %_retx_16, i32 0, i32 2
  %freeVal10 = load %anon0_struct*, %anon0_struct** %freePtr9
  %function_access11 = getelementptr inbounds %anon1_struct, %anon1_struct* %_retx_16, i32 0, i32 0
  %function_call12 = load i32 (i32, %anon0_struct*)*, i32 (i32, %anon0_struct*)** %function_access11
  %function_result13 = call i32 %function_call12(i32 %freeVal8, %anon0_struct* %freeVal10)
  %printi14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %function_result13)
  %gstruct15 = alloca %anon2_struct
  %funcField16 = getelementptr inbounds %anon2_struct, %anon2_struct* %gstruct15, i32 0, i32 0
  store i32 (i32, %anon0_struct*)* @anon2, i32 (i32, %anon0_struct*)** %funcField16
  %_x_2 = load i32, i32* @_x_2
  %_retn_117 = load %anon0_struct*, %anon0_struct** @_retn_1
  %freeField18 = getelementptr inbounds %anon2_struct, %anon2_struct* %gstruct15, i32 0, i32 1
  %freeField19 = getelementptr inbounds %anon2_struct, %anon2_struct* %gstruct15, i32 0, i32 2
  store i32 %_x_2, i32* %freeField18
  store %anon0_struct* %_retn_117, %anon0_struct** %freeField19
  store %anon2_struct* %gstruct15, %anon2_struct** @_retx_2
  %_retx_2 = load %anon2_struct*, %anon2_struct** @_retx_2
  %freePtr20 = getelementptr inbounds %anon2_struct, %anon2_struct* %_retx_2, i32 0, i32 1
  %freeVal21 = load i32, i32* %freePtr20
  %freePtr22 = getelementptr inbounds %anon2_struct, %anon2_struct* %_retx_2, i32 0, i32 2
  %freeVal23 = load %anon0_struct*, %anon0_struct** %freePtr22
  %function_access24 = getelementptr inbounds %anon2_struct, %anon2_struct* %_retx_2, i32 0, i32 0
  %function_call25 = load i32 (i32, %anon0_struct*)*, i32 (i32, %anon0_struct*)** %function_access24
  %function_result26 = call i32 %function_call25(i32 %freeVal21, %anon0_struct* %freeVal23)
  %printi27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %function_result26)
  store i32 42, i32* @_x_3
  %gstruct28 = alloca %anon3_struct
  %funcField29 = getelementptr inbounds %anon3_struct, %anon3_struct* %gstruct28, i32 0, i32 0
  store %anon4_struct* (i32, i32)* @anon3, %anon4_struct* (i32, i32)** %funcField29
  %_x_3 = load i32, i32* @_x_3
  %freeField30 = getelementptr inbounds %anon3_struct, %anon3_struct* %gstruct28, i32 0, i32 1
  store i32 %_x_3, i32* %freeField30
  store %anon3_struct* %gstruct28, %anon3_struct** @_retx_3
  %_retx_3 = load %anon3_struct*, %anon3_struct** @_retx_3
  %freePtr31 = getelementptr inbounds %anon3_struct, %anon3_struct* %_retx_3, i32 0, i32 1
  %freeVal32 = load i32, i32* %freePtr31
  %function_access33 = getelementptr inbounds %anon3_struct, %anon3_struct* %_retx_3, i32 0, i32 0
  %function_call34 = load %anon4_struct* (i32, i32)*, %anon4_struct* (i32, i32)** %function_access33
  %function_result35 = call %anon4_struct* %function_call34(i32 6, i32 %freeVal32)
  %freePtr36 = getelementptr inbounds %anon4_struct, %anon4_struct* %function_result35, i32 0, i32 1
  %freeVal37 = load i32, i32* %freePtr36
  %function_access38 = getelementptr inbounds %anon4_struct, %anon4_struct* %function_result35, i32 0, i32 0
  %function_call39 = load i32 (i32, i32)*, i32 (i32, i32)** %function_access38
  %function_result40 = call i32 %function_call39(i32 12, i32 %freeVal37)
  %printi41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %function_result40)
  ret i32 0
}

define %anon4_struct* @anon3(i32 %a, i32 %_x_3) {
entry:
  %a1 = alloca i32
  store i32 %a, i32* %a1
  %_x_32 = alloca i32
  store i32 %_x_3, i32* %_x_32
  %gstruct = alloca %anon4_struct
  %funcField = getelementptr inbounds %anon4_struct, %anon4_struct* %gstruct, i32 0, i32 0
  store i32 (i32, i32)* @anon4, i32 (i32, i32)** %funcField
  %_x_33 = load i32, i32* %_x_32
  %freeField = getelementptr inbounds %anon4_struct, %anon4_struct* %gstruct, i32 0, i32 1
  store i32 %_x_33, i32* %freeField
  ret %anon4_struct* %gstruct
}

define i32 @anon4(i32 %b, i32 %_x_3) {
entry:
  %b1 = alloca i32
  store i32 %b, i32* %b1
  %_x_32 = alloca i32
  store i32 %_x_3, i32* %_x_32
  %_x_33 = load i32, i32* %_x_32
  ret i32 %_x_33
}

define i32 @anon2(i32 %_x_2, %anon0_struct* %_retn_1) {
entry:
  %_x_21 = alloca i32
  store i32 %_x_2, i32* %_x_21
  %_retn_12 = alloca %anon0_struct*
  store %anon0_struct* %_retn_1, %anon0_struct** %_retn_12
  %_retn_13 = load %anon0_struct*, %anon0_struct** %_retn_12
  %_x_24 = load i32, i32* %_x_21
  %function_access = getelementptr inbounds %anon0_struct, %anon0_struct* %_retn_13, i32 0, i32 0
  %function_call = load i32 (i32, i32)*, i32 (i32, i32)** %function_access
  %function_result = call i32 %function_call(i32 %_x_24, i32 10)
  ret i32 %function_result
}

define i32 @anon1(i32 %_x_1, %anon0_struct* %_retn_1) {
entry:
  %_x_11 = alloca i32
  store i32 %_x_1, i32* %_x_11
  %_retn_12 = alloca %anon0_struct*
  store %anon0_struct* %_retn_1, %anon0_struct** %_retn_12
  %_retn_13 = load %anon0_struct*, %anon0_struct** %_retn_12
  %_x_14 = load i32, i32* %_x_11
  %function_access = getelementptr inbounds %anon0_struct, %anon0_struct* %_retn_13, i32 0, i32 0
  %function_call = load i32 (i32, i32)*, i32 (i32, i32)** %function_access
  %function_result = call i32 %function_call(i32 %_x_14, i32 9)
  ret i32 %function_result
}

define i32 @anon0(i32 %n, i32 %m) {
entry:
  %n1 = alloca i32
  store i32 %n, i32* %n1
  %m2 = alloca i32
  store i32 %m, i32* %m2
  %n3 = load i32, i32* %n1
  ret i32 %n3
}
